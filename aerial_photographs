{
 "metadata": {
  "name": "",
  "signature": "sha256:3c6fd4d3d20f7efeb739e93bfb0a96cd85eea5810b4a4c7693e7ca1b3440c91c"
 },
 "nbformat": 3,
 "nbformat_minor": 0,
 "worksheets": [
  {
   "cells": [
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# import the owslib package\n",
      "import owslib.wms"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 240
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# get the wms\n",
      "wmsurl   = 'http://geodata1.nationaalgeoregister.nl/luchtfoto/wms'\n",
      "wms      = owslib.wms.WebMapService(wmsurl)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 241
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# let's check out the contents of the wms\n",
      "wms.contents"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "metadata": {},
       "output_type": "pyout",
       "prompt_number": 250,
       "text": [
        "{'luchtfoto': <owslib.wms.ContentMetadata instance at 0x00000000177D3048>,\n",
        " 'luchtfoto_jpeg': <owslib.wms.ContentMetadata instance at 0x000000001A1D47C8>,\n",
        " 'luchtfoto_png': <owslib.wms.ContentMetadata instance at 0x000000001A1D4408>}"
       ]
      }
     ],
     "prompt_number": 250
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# we will use the png layer\n",
      "wmslayer = ['luchtfoto_png']"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 251
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# set the GPS coordinates of Delft\n",
      "top, left, bottom, right = (52.02,4.30,51.97,4.40)\n",
      "bbox = (left, bottom, right, top)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 252
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Get the x and y proportionalities right\n",
      "y_pix = 400\n",
      "x_pix = y_pix * np.cos(top/360.*2*np.pi) * np.sin(right-left) / np.sin(top-bottom)\n",
      "size  = (int(x_pix), y_pix)\n",
      "print 'Size [pixels]:',size"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "Size [pixels]: (491, 400)\n"
       ]
      }
     ],
     "prompt_number": 253
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Set coordinate system\n",
      "coor   = 'EPSG:4326'"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 254
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# get map\n",
      "f = wms.getmap(layers = wmslayer,\n",
      "               srs    = coor,\n",
      "               bbox   = bbox,\n",
      "               size   = size,\n",
      "               format = 'image/png')"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 255
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# plot the map\n",
      "import matplotlib.pyplot as plt\n",
      "\n",
      "img = plt.imread(f)\n",
      "\n",
      "fig = plt.figure()\n",
      "ax = fig.add_subplot(111)\n",
      "ax.imshow(img)\n",
      "ax.set_title('Aerial photograph of Delft')\n",
      "\n",
      "plt.show()\n"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 256
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# The map looks good, but a bit gray. With the colour package, we can easily\n",
      "# convert the rgb values to hsl (hue, saturation, lightness), increase the\n",
      "# saturation and convert it back to rgb\n",
      "\n",
      "import colour\n",
      "\n",
      "# Let us increase the saturation with 50 percent\n",
      "\n",
      "new_img = np.empty_like(img)\n",
      "\n",
      "for i in range(np.size(img, 0)):\n",
      "    for j in range(np.size(img, 1)):\n",
      "        hsl = colour.rgb2hsl(img[i,j,:])\n",
      "        hsl = (hsl[0], hsl[1]*1.5, hsl[2])\n",
      "        rgb = colour.hsl2rgb(hsl)\n",
      "        new_img[i,j,:] = rgb       "
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 257
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Now plot the map again\n",
      "\n",
      "fig = plt.figure()\n",
      "ax = fig.add_subplot(111)\n",
      "ax.imshow(new_img)\n",
      "ax.set_title('Aerial photograph of Delft, with saturation 150%')\n",
      "plt.show()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 258
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [],
     "language": "python",
     "metadata": {},
     "outputs": []
    }
   ],
   "metadata": {}
  }
 ]
}
